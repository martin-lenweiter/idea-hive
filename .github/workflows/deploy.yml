name: deploy

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - name: Install dependencies
        run: |
          cd backend
          go mod download
      - name: Run tests
        run: |
          cd backend
          go test -v ./...

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Build Docker image (frontend + backend)
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      # Step 3: Install Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Step 4: Set Heroku Stack to Container
      - name: Set Heroku stack to container
        run: |
          heroku stack:set container -a ${{ secrets.HEROKU_APP_NAME }}

      # Step 5: Deploy to Heroku using Docker
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
          docker tag myapp:latest registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          heroku container:release web -a ${{ secrets.HEROKU_APP_NAME }}

      # Optional: Clean up Docker images
      - name: Clean up Docker images
        run: docker rmi myapp:latest